<ResourceDictionary
    x:Class="NINA.InstructionMath.SequenceItems.PluginItemTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NINA.InstructionMath.SequenceItems"
    xmlns:mini="clr-namespace:NINA.View.Sequencer.MiniSequencer;assembly=NINA.Sequencer"
    xmlns:nina="clr-namespace:NINA.View.Sequencer;assembly=NINA.Sequencer">

    <!--  This geometrygroup defines a custom SVG to be used with the plugin instruction  -->
    <GeometryGroup x:Key="Math_SVG">
        <PathGeometry Figures="M34.367 142.514c11.645 0 17.827-10.4 19.645-16.544c0.029-0.097 0.056-0.196 0.081-0.297    c4.236-17.545 10.984-45.353 15.983-65.58h17.886c3.363 0 6.09-2.726 6.09-6.09c0-3.364-2.727-6.09-6.09-6.09H73.103    c1.6-6.373 2.771-10.912 3.232-12.461l0.512-1.734c1.888-6.443 6.309-21.535 13.146-21.535c6.34 0 7.285 9.764 7.328 10.236    c0.27 3.343 3.186 5.868 6.537 5.579c3.354-0.256 5.864-3.187 5.605-6.539C108.894 14.036 104.087 0 89.991 0    C74.03 0 68.038 20.458 65.159 30.292l-0.49 1.659c-0.585 1.946-2.12 7.942-4.122 15.962H39.239c-3.364 0-6.09 2.726-6.09 6.09    c0 3.364 2.726 6.09 6.09 6.09H57.53c-6.253 25.362-14.334 58.815-15.223 62.498c-0.332 0.965-2.829 7.742-7.937 7.742    c-7.8 0-11.177-10.948-11.204-11.03c-0.936-3.229-4.305-5.098-7.544-4.156c-3.23 0.937-5.092 4.314-4.156 7.545    C13.597 130.053 20.816 142.514 34.367 142.514z" FillRule="NonZero"/>
        <PathGeometry Figures="M124.685 126.809c3.589 0 6.605-2.549 6.605-6.607c0-1.885-0.754-3.586-2.359-5.474l-12.646-14.534l12.271-14.346    c1.132-1.416 1.98-2.926 1.98-4.908c0-3.59-2.927-6.231-6.703-6.231c-2.547 0-4.527 1.604-6.229 3.684l-9.531 12.454L98.73 78.391    c-1.89-2.357-3.869-3.682-6.7-3.682c-3.59 0-6.607 2.551-6.607 6.609c0 1.885 0.756 3.586 2.357 5.471l11.799 13.592    L86.647 115.67c-1.227 1.416-1.98 2.926-1.98 4.908c0 3.589 2.926 6.229 6.699 6.229c2.549 0 4.53-1.604 6.229-3.682l10.19-13.4    l10.193 13.4C119.872 125.488 121.854 126.809 124.685 126.809z" FillRule="NonZero"/>
    </GeometryGroup>

    <!--  The definition of the plugin test condition style  -->
    <!--  The DataType has to be defined as the instruction in context  -->
    <DataTemplate DataType="{x:Type local:MathLoopCondition}">
        <nina:SequenceBlockView>
            <nina:SequenceBlockView.SequenceItemContent>
                <DockPanel LastChildFill="False">
                    <Button DockPanel.Dock="Left" Command="{Binding OpenEditorCommand}" CommandParameter="Math Loop">
                        <TextBlock Margin="5" Foreground="{StaticResource ButtonForegroundBrush}">Open Expression Editor</TextBlock>
                    </Button>
                    <StackPanel Margin="10,0,0,0" DockPanel.Dock="Left" Orientation="Horizontal">
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Loop while result</TextBlock>
                        <ComboBox Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding OperatorItemSource}" SelectedItem="{Binding SelectedOperator}" DisplayMemberPath="Value" />
                        <TextBox VerticalAlignment="Center" Text="{Binding TargetValueText}"/>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding ResultVisibility}" VerticalAlignment="Center">
                        <TextBlock Text="{Binding LastResult}"/>
                        <TextBlock Margin="3,0,3,0"  Text="{Binding OperatorText}" />
                        <TextBlock Text="{Binding TargetValueText}"/>
                    </StackPanel>
                </DockPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <!--  The definition of the test condition plugin style in the mini format on the imaging tab  -->
    <!--  The Key has to be defined as the fully qualified instruction name and the "_Mini" postfix  -->
    <DataTemplate x:Key="NINA.InstructionMath.SequenceItems.MathLoopCondition_Mini">
        <mini:MiniSequenceItem>
            <mini:MiniSequenceItem.SequenceItemContent>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Visibility="{Binding ResultVisibility}" VerticalAlignment="Center">
                    <TextBlock Text="{Binding LastResult}"/>
                    <TextBlock Margin="3,0,3,0" Text="{Binding OperatorText}" />
                    <TextBlock Text="{Binding TargetValueText}"/>
                </StackPanel>
            </mini:MiniSequenceItem.SequenceItemContent>
        </mini:MiniSequenceItem>
    </DataTemplate>
</ResourceDictionary>